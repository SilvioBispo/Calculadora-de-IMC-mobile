package com.example.bussola;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;
import android.view.animation.Animation;
import android.view.animation.RotateAnimation;
import android.widget.ImageView;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity implements SensorEventListener
{

    Float azimuth_angle;
    private SensorManager compassSensorManager;
    Sensor accelerometer;
    Sensor magnetometer;
    TextView tx_degress;
    TextView bussola;
    ImageView img_compass;
    private float current_degree = 0f;

    @Override
    protected void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        compassSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);

        accelerometer = compassSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);
        magnetometer = compassSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);
    }

    protected void onResume(){
        super.onResume();
        compassSensorManager.registerListener(this,accelerometer,SensorManager.SENSOR_DELAY_UI);
        compassSensorManager.registerListener(this,magnetometer,SensorManager.SENSOR_DELAY_UI);

    }

    protected void onPause(){
        super.onPause();
        compassSensorManager.unregisterListener(this);
    }

    float[] accel_read;
    float[] magnetic_read;

    @Override
    public void onSensorChanged(SensorEvent event){
        tx_degress =(TextView) findViewById(R.id.tx_degress);
        img_compass =(ImageView) findViewById(R.id.img_compass);
        bussola =(TextView) findViewById(R.id.textView);

        if (event.sensor.getType() == Sensor.TYPE_ACCELEROMETER)
            accel_read = event.values;

        if(event.sensor.getType() == Sensor.TYPE_MAGNETIC_FIELD)
            magnetic_read = event.values;

        if (accel_read != null && magnetic_read != null){

            float R[] = new float[9];
            float I[] = new float[9];
            boolean successsful_read = SensorManager.getRotationMatrix(R,I, accel_read , magnetic_read);

        if (successsful_read) {
            float orientation[] = new float[3];
            SensorManager.getOrientation(R, orientation);

            azimuth_angle = orientation[0];
            float degress = ((azimuth_angle * 180f) / 3.18f);
            int degressint = Math.round(degress);

            tx_degress.setText(Integer.toString(degressint) + (char) 0x00B0 + "do norte absoluto.");

              RotateAnimation rotate = new RotateAnimation(current_degree, -degressint,Animation.RELATIVE_TO_SELF,0.5f,Animation.RELATIVE_TO_SELF,0.5f);
            rotate.setDuration(100);
            rotate.setFillAfter(true);

              img_compass.startAnimation(rotate);
              current_degree = -degressint;
         }
        }
    }
    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy){

    }

}
